<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xd="http://www.oxygenxml.com/ns/doc/xsl"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:its="http://www.w3.org/2005/11/its"
    xmlns="http://www.tei-c.org/ns/1.0" xmlns:tei="http://www.tei-c.org/ns/1.0"
    exclude-result-prefixes="xd xs its my tei" version="2.0"
    xmlns:my="local-functions.uri">
    <xsl:output method="html" indent="yes" encoding="UTF-8"/>
    <!-- Receives a document generated by aggregation that has <div> top element and <my:struct> for index of ref.xml 
        and <my:composList> for composite index of all witnesses -->
    <!-- Uses fairly obtrusive (and not well conceived) javascript -->

    <xsl:param name="unit" select="'m'"/>
    <xsl:param name="mcite" select="'4.3.9.2'"/>
    <!--<xsl:variable name="prevLookup">
        
        <!-\- reconstructs the previous lookup from xslt parameters, and uses as parameters in javascript:toggle() -\->
        <xsl:choose>
            <xsl:when test="$unit = 'm'">
                <my:prevM>
                    <xsl:value-of
                        select="concat('id.',$mcite)"/>
                </my:prevM>
                <my:prevCh>
                    <xsl:value-of
                        select="/my:div/my:struct/my:order/my:tract/my:chapter/my:mishnah[@xml:id=concat('ref.',$mcite)]/parent::my:chapter/@xml:id"
                    />
                </my:prevCh>
                <my:prevTract>
                    <xsl:value-of
                        select="/my:div/my:struct/my:order/my:tract/my:chapter/my:mishnah[@xml:id=concat('ref.',$mcite)]/ancestor::my:tract/@xml:id"
                    />
                </my:prevTract>
                <my:prevOrd>
                    <xsl:value-of
                        select="/my:div/my:struct/my:order/my:tract/my:chapter/my:mishnah[@xml:id=concat('ref.',$mcite)]/ancestor::my:order/@n"
                    />
                </my:prevOrd>
            </xsl:when>
        </xsl:choose>
    </xsl:variable>-->
    <xsl:template match="/">
        <html xmlns="http://www.w3.org/1999/xhtml">
            <head>
                <title>Test Dropdown</title>
                <style type="text/css">
                    .order,
                    .order li,
                    .order ul{
                        margin:0px;
                        list-style:none;
                        outside:none;
                    }
                    ul.order{
                        height:200px;
                        width:200px;
                        overflow:auto;
                        padding:0px;
                        font-weight:bold;
                    }
                    
                    ul.tract{
                        padding-left:1em;
                        font-style:italic;
                        font-weight:normal;
                        display:none;
                    }
                    
                    ul.chapt{
                        padding-left:1em;
                        font-style:normal;
                        display:none;
                    }
                    ul.mish{
                        padding-left:1em;
                        font-style:italic;
                        display:none;
                    }
                    li.whole-ch{
                        padding-left:0em;
                    }
                    li.indiv-m:before{
                        padding-left:0em;
                    }</style>
                <script type="text/javascript" language="JavaScript">
                    function toggle(id) {
                    var state = document.getElementById(id).style.display;
                    if (state == 'block') {
                    document.getElementById(id).style.display = 'none';
                    document.getElementById('shown').style.display = 'block';
                    } else {
                    document.getElementById(id).style.display = 'block';
                    document.getElementById('shown').style.display = 'none';
                    }
                    }
                   
                </script>
            </head>
            <body>
                <div class="dropdown">
                    <h3>Select from the following</h3>
                    <ul class="order">
                        <xsl:apply-templates/>
                    </ul>
                    <!--<!-\- Restores previous search. Need to do a more responsible job of this. -\->
                    <script>
                        javascript:toggle('Neziqin');
                    </script>
                    <script>
                        javascript:toggle('Bava_Metsia');
                    </script>
                    <script>
                        javascript:toggle('ref.4.2.9');
                    </script>-->
                </div>
            </body>

        </html>
    </xsl:template>
    <xsl:template match="div|my:struct">
        <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="my:wits">
        <xsl:apply-templates/>
    </xsl:template>
    <xsl:template match="my:order">
        <li xmlns="http://www.w3.org/1999/xhtml">
            <a class="toggle" href="javascript:toggle('{@n}')">
                <xsl:value-of select="@n"/>
            </a>
            <ul class="tract" id="{@n}">
                <xsl:apply-templates/>
            </ul>
        </li>
    </xsl:template>
    <xsl:template match="my:tract">
        <xsl:choose>
            <xsl:when
                test="substring-after(@xml:id,'ref.') = //my:tract-compos/@n">
                <!-- This tractate has chapter children -->
                <li class="tract-text" xmlns="http://www.w3.org/1999/xhtml">
                    <a class="toggle" href="javascript:toggle('{@n}')">
                        <xsl:value-of select="replace(@n,'_',' ')"/>
                    </a>
                    <ul class="chapt" id="{@n}">
                        <xsl:apply-templates/>
                    </ul>
                </li>
            </xsl:when>
            <xsl:otherwise>
                <li class="tract-no-text" xmlns="http://www.w3.org/1999/xhtml">
                    <xsl:value-of select="replace(@n,'_',' ')"/>
                </li>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template match="my:chapter">
        <xsl:choose>
            <xsl:when test="substring-after(@xml:id,'ref.') = //my:ch-compos/@n">
                <!-- This chapter has mishnah children -->
                <li xmlns="http://www.w3.org/1999/xhtml" class="ch-text">
                    <a class="toggle" href="javascript:toggle('{@xml:id}')"
                        >Chapter <xsl:value-of
                            select="substring-after(@xml:id, concat(parent::my:tract/@xml:id, '.'))"
                        /></a>
                    <xsl:if
                        test="substring-after(@xml:id,'ref.') = //my:ch-compos/@n">
                        <ul class="mish" id="{@xml:id}">
                            <li class="whole-ch" id="concat('id.',substring-after(@xml:id,'ref.')">
                                <a
                                    href="compare?unit=ch&amp;mcite={substring-after(@xml:id,'ref.')}"
                                    >Whole Chapter</a>
                            </li>
                            <xsl:apply-templates/>
                        </ul>
                    </xsl:if>
                </li>
            </xsl:when>
            <xsl:otherwise>
                <li class="ch-no-text" xmlns="http://www.w3.org/1999/xhtml">
                    Chapter <xsl:value-of
                        select="substring-after(@xml:id, concat(parent::my:tract/@xml:id, '.'))"
                    />
                </li>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template match="my:mishnah">
        <xsl:choose>
            <xsl:when test="substring-after(@xml:id,'ref.') = //my:m-compos/@n">
                <!-- This Mishnah has text -->
                <li xmlns="http://www.w3.org/1999/xhtml" class="indiv-m">
                    <a
                        href="compare?unit=m&amp;mcite={substring-after(@xml:id,'ref.')}">
                        <xsl:value-of
                            select="concat('Mishnah ',substring-after(@xml:id, concat(ancestor::my:tract/@xml:id, '.')))"
                        />
                    </a>
                </li>
            </xsl:when>
            <xsl:otherwise>
                <li xmlns="http://www.w3.org/1999/xhtml" class="indiv-m-no-text">
                    <xsl:value-of
                        select="concat('Mishnah ',substring-after(@xml:id, concat(ancestor::my:tract/@xml:id, '.')))"
                    />
                </li>
            </xsl:otherwise>
        </xsl:choose>
    </xsl:template>
    <xsl:template match="my:composList"/>
</xsl:stylesheet>
